"""fl_metric.py

This file defines Pydantic schemas for `FLRoundMetric`.
These schemas are used for data validation, serialization, and deserialization
of federated learning round metrics, ensuring data consistency when interacting
with the API and database.

Purpose:
- To define the structure and data types for FL round metric data.
- To validate incoming request data (e.g., when creating new metrics).
- To serialize outgoing response data (e.g., when retrieving metrics).
- To enable ORM mode for seamless conversion between Pydantic models and SQLAlchemy ORM objects.

Key Components:
- `FLRoundMetricBase`: Base schema defining common attributes for FL round metrics.
- `FLRoundMetric`: Full schema including database-generated fields like `id` and `timestamp`.
- `BaseModel`: Pydantic's base class for creating data models.
- `model_config = ConfigDict(from_attributes=True)`: Enables Pydantic to work directly with SQLAlchemy ORM models (Pydantic v2).
"""

import datetime

from pydantic import BaseModel, ConfigDict


class FLRoundMetricBase(BaseModel):
    """Base Pydantic schema for federated learning round metrics.

    This schema defines the common attributes that are typically provided when
    creating or updating a federated learning round metric record.

    Attributes:
        round_number (int): The sequential number of the federated learning round.
        avg_accuracy (float): The average accuracy of the models in the round.
        avg_loss (float): The average loss of the models in the round.
        num_clients (int): The number of clients that participated in the round.

    """

    round_number: int
    avg_accuracy: float
    avg_loss: float
    num_clients: int
    avg_uncertainty: float


class FLRoundMetric(FLRoundMetricBase):
    """Pydantic schema for a federated learning round metric, including
    database-generated fields.

    This schema extends `FLRoundMetricBase` by adding fields that are typically
    generated by the database (e.g., `id`, `timestamp`). It is used for responses
    when retrieving FL round metrics from the API.

    Attributes:
        id (int): The unique identifier of the FL round metric record.
        timestamp (datetime.datetime): The timestamp when the record was created.

    """

    id: int
    timestamp: datetime.datetime

    model_config = ConfigDict(from_attributes=True)


class FLRoundMetricUpdate(FLRoundMetricBase):
    """Pydantic schema for updating a federated learning round metric.

    This schema extends `FLRoundMetricBase` to allow partial updates.
    All fields are optional, enabling clients to send only the fields they wish to change.
    """

    round_number: int | None = None
    avg_accuracy: float | None = None
    avg_loss: float | None = None
    num_clients: int | None = None
    avg_uncertainty: float | None = None
